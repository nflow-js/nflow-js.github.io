{"version":3,"sources":["wrap-start.js","nflow.js","cancellable.js","connect.js","create.js","emit.js","identify.js","listen.js","loggable.js","stateful.js","consts.js","utils.js","wrap-end.js"],"names":[],"mappings":"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","file":"flow.js","sourcesContent":["(function (scope){\n","\nvar create = (defaults, name, data)=>{\n  var flow = defaults.factory()\n\n  defaults\n    .behaviours\n    .forEach((d)=>d(flow, defaults, name, data))\n\n  return flow\n}\n\nvar behaviours = {}","behaviours.cancellable = (flow, defaults, name)=>{\n  \n  flow.cancel = (...args) => {\n    assert(args.length\n         , ERRORS.invalidCancelArgs)\n    dispatchInternalEvent(flow, 'cancel', true)\n    flow.status.value = STATUS.CANCELLED\n    return flow\n  }\n\n  flow.isCancelled = () => {\n    return [flow]\n      .concat(flow.parents())\n      .some(e=>e.status.value == STATUS.CANCELLED)\n  }\n\n  flow.stopPropagation = (...args) => {\n    assert(args.length\n         , ERRORS.invalidStopPropagationArgs)\n    flow.status.value = STATUS.STOPPED\n    dispatchInternalEvent(flow, 'propagationStopped', true)\n    return flow\n  }\n\n  flow.propagationStopped = () => {\n    return flow.status.value == STATUS.STOPPED\n  }\n\n\n  \n\n}","behaviours.connect = (flow)=>{\n  \n  /**\n   *  .children() API\n   */\n  flow.children = (...args) => {\n    assert(args.length, ERRORS.invalidChildren)\n    return flow.children.value.concat()\n  }\n  flow.children.value = []\n\n  flow.children.has = (matcher, recursive)=>flow.children.find(matcher, recursive)!=null\n  flow.children.find = (matcher, recursive)=>flow.children.findAll(matcher, recursive).pop()\n  flow.children.findAll = (matcher, recursive)=>{\n\n    var filter = matcher;\n    if (matcher==null) return []\n    if (typeof(matcher)==\"string\") filter = f=>f.name()==matcher\n    else if (isFlow(matcher)) filter = f=>f==matcher\n    var children = recursive \n      ? flow.children.all()\n      : flow.children()\n    \n    return children.filter(filter)\n  }\n\n  flow.get = flow.children.find\n  flow.getAll = flow.children.find\n\n  /**\n   *  return all children recursively\n   */\n  flow.children.all = (...args)=>{\n    assert(args.length, ERRORS.invalidChildren)\n    var childMap = {}\n    return getChildren(flow)\n\n    function getChildren(flow){\n      if (childMap[flow.guid()]) return [];\n      childMap[flow.guid()] = true\n      var c = flow.children.value\n      var gc = flow.children.value.map(getChildren)\n      \n      return c.concat.apply(c, gc);\n    }\n\n  }\n\n  /**\n   *  .parent() API\n   */\n  flow.parent = (parent=UNSET) => {\n    if (parent===UNSET) return flow.parent.value;\n    parent && assert(!isFlow(parent), ERRORS.invalidParent, parent)\n    var previousParent = flow.parent() \n    detach(flow)\n    dispatchInternalEvent(flow, 'childRemoved', previousParent)\n    attach(parent)\n    dispatchInternalEvent(flow, 'childAdded', parent, previousParent)\n    return flow\n  }\n\n  flow.parents = (...args)=>{\n    assert(args.length, ERRORS.invalidParents)\n    var parentMap = {}\n    var parents = []\n    var p = flow.parent()\n    while (p && !parentMap[p.guid()]){\n      parents.push(p)\n      parentMap[p.guid()]=true\n      p = p.parent()\n    }\n    return parents \n  }\n\n  flow.parents.find = (matcher)=>{\n    return flow.parents()\n      .filter(typeof(matcher)==\"string\"\n          ? (f=>f.name()==matcher)\n          : matcher)\n      .pop()\n  }\n\n  flow.parents.root = (...args)=>{\n    assert(args.length, ERRORS.invalidRoot)\n    return flow\n      .parents()\n      .pop()\n  }\n\n  flow.children.detach = (child)=>{\n    flow.children.value = \n      flow.children.value\n        .filter(f=>f!=child)\n  }\n\n  function attach(parent) {\n    parent && parent.children.value.push(flow)\n    flow.parent.value = parent\n  }\n\n}\n","behaviours.create = (flow, defaults)=>{\n\n  flow.create = (name, ...data) => {\n    \n    var instance = flow.get(name)\n    if (instance){\n      instance.data(...data)\n      return instance\n    }\n    instance = create(flow.create.defaults, name, data)\n    instance.parent.value = flow\n    flow.children.value.push(instance)\n    dispatchInternalEvent(flow, 'create', instance)\n    return instance\n  }\n\n  flow.create.defaults = {\n    factory: defaults.factory,\n    behaviours: defaults.behaviours.concat(),\n    direction: defaults.direction\n\n  }\n\n}","behaviours.emit = (flow)=>{\n  \n  flow.status = (...args) => {\n    assert(args.length\n         , ERRORS.invalidStatus)\n    return flow.status.value\n  }\n  flow.status.value = STATUS.IDLE\n  merge(STATUS, flow.status)\n  \n\n  flow.direction = (direction=UNSET) => {\n    if (direction===UNSET) return flow.direction.value\n    flow.direction.value = direction\n    return flow\n  }\n  flow.direction.value = flow.create.defaults.direction\n  merge(DIRECTION, flow.direction)\n\n  flow.emit = (name=UNSET, ...args) => {\n    if (name==UNSET) {\n      // emit current flow object\n      detach(flow)\n      log(flow, 'emit', flow)\n      flow.emit.route(flow)\n      log(flow, 'emitted', flow)\n      return flow\n    }\n    if (isFlow(name)) {\n      //1. reparent the passed in flow object where it's emitted from\n      name.parent(flow)\n\n      //2.  emit the passed in flow object\n      detach(flow)\n      log(name, 'emit', name)\n      flow.emit.route(name)\n      log(name, 'emitted', name)\n      return flow\n    }\n\n    assert(typeof(name)!='string'\n      , ERRORS.invalidEventName)\n    \n    var event = flow.create(name, ...args)\n    detach(event)\n    log(event, 'emit', event)\n    flow.emit.route(event)\n    log(event, 'emitted', event)\n    return event\n  }\n\n  flow.emit.route = (flow)=>{\n    // 2. reset status\n    flow.emit.recipients = []\n    flow.emit.recipientsMap = {}\n    \n    flow.status.value = STATUS.FLOWING;\n    \n    // only keep unique recipients\n    flow.emit.targets = flow.emit.route[flow.direction()](flow)\n      .filter(f=>{\n        if (flow.emit.recipientsMap[f.guid()]) return false\n        return flow.emit.recipientsMap[f.guid()] = true\n      })\n\n    while (flow.emit.targets.length){\n      var destination = flow.emit.targets.shift()\n      if (flow.isCancelled()) break;\n      if (flow.propagationStopped()) break;\n      notify(flow, destination)\n    }\n  }\n\n  flow.emit.route.DEFAULT = (flow)=>{\n    return flatten([flow].concat(flow.parents())\n      .map((node)=>{\n        if (isDetached(node)\n          || !node.parent()) return [node]\n          .concat(node.children.all())\n        //TODO check circular deps\n        return [node]\n    }))}\n\n  flow.emit.route.UPSTREAM = (flow)=>{\n    return [flow].concat(flow.parents())\n  }\n\n  flow.emit.route.DOWNSTREAM = (flow)=>{\n    return flatten([flow]\n      .concat(flow.parent())\n      .concat(flow.parent().children.all())\n      .filter(Boolean)\n    )}\n\n  flow.emit.route.NONE = (flow)=>[flow, flow.parent()]\n\n  function notify(flow, currentNode){\n    if (currentNode.on.notifyListeners(flow)) {\n      flow.emit.recipientsMap[currentNode.guid()] = flow.direction()\n      flow.emit.recipients.push(currentNode)\n    }\n  }\n\n\n  function getNextFlowDestination(currentNode, direction){\n    return {\n      NONE: [currentNode],\n      UPSTREAM: [currentNode.parent()],\n      DEFAULT: [currentNode.parent()],\n      DOWNSTREAM: currentNode.children()\n    }[direction]\n  }\n\n\n}\n","var guid = 0\nbehaviours.identify = (flow, defaults, name)=>{\n  \n  flow.guid = (...args) => {\n    assert(args.length\n         , ERRORS.invalidGuid)\n    return flow.guid.value\n  }\n  flow.guid.value = \"\"+guid++\n\n  flow.name = (name=UNSET) => {\n    if (name===UNSET) return flow.name.value\n    assert(typeof(name)!=\"string\"\n         , ERRORS.invalidName, name)\n    var previousName = flow.name.value\n    flow.name.value = name\n    dispatchInternalEvent(flow, 'name', name, previousName)\n    return flow\n  }\n  flow.name.value = name || flow.guid()\n  flow.name.isFlow = true\n  flow.name.isInternal = false\n\n  flow.call = (...functions)=>{\n    functions\n      .filter(f=>typeof(f)=='function')\n      .forEach(f=>f(flow))\n  }\n\n}","behaviours.listen = (flow)=>{\n  var listenerMap = {};\n  flow.on = (name=UNSET, ...args) => {\n    if (name==UNSET) return listenerMap //TODO clone this!\n    assert(typeof(name)!='string'\n      , ERRORS.invalidListener)\n    \n    if (!args.length) {\n      return listenerMap[name]\n    }\n\n    if (args.length==1 && args[0]==null) {\n      delete listenerMap[name]\n      return flow;\n    }\n    listenerMap[name] = args\n      .filter(l=>!assert(typeof(l)!='function'\n        , ERRORS.invalidListenerType, typeof(l)+\": \"+l)\n      )\n    return flow\n  }\n\n  flow.on.notifyListeners = (event)=>{\n    if (listenerMap[event.name()]) {\n      event.target = flow\n      listenerMap[event.name()]\n        .every(listener=>{\n          listener.apply(event, event.data.value)\n          return (event.status() == STATUS.FLOWING)\n        })\n      return true\n    }\n  }\n}","behaviours.loggable = (flow)=>{\n  flow.toString = () => {\n    return \"{ Object Flow, name:%name }\"\n      .replace(\"%name\", flow.name())\n  }\n\n  flow.toObj = () => ({\n    name: flow.name(),\n    guid: flow.guid(),\n    parentName: flow.parent() && flow.parent().name(),\n    parentGuid: flow.parent() && flow.parent().guid(),\n    status: flow.status(),\n    listeners: Object.keys(flow.on()),\n    children: flow.children().map(f=>({ name: f.name(), guid: f.guid() }))\n  })\n}\n\nfunction log(flow, name, newData, oldData){\n  !isInternal(flow)\n    && instance.logger.value.forEach(f=>f(flow, name, newData, oldData))\n  \n  instance.enableDevTools.value\n    && debug(flow, name, newData, oldData)\n}\n\nfunction debug(flow, name, d, d0){\n  sendToDevTools(name, \n    {\n      name: d.name.value, \n      id: d.guid.value,\n      parentId: flow.guid.value\n    })\n}","  behaviours.stateful = (flow, defaults, name, data)=>{\n    flow.data = (...data) => {\n    if (!data.length) {\n      return (flow.data.value.length<=1)\n        ? flow.data.value[0]\n        : flow.data.value\n      }\n    var oldData = flow.data.value\n    flow.data.value = data\n    dispatchInternalEvent(flow, 'data'\n      , (data.length>1?data:data[0])\n      , (oldData.length>1?oldData:oldData[0]))\n    return flow\n    }\n    flow.data.value = data\n  }","/**\n *  consts\n */\nconst UNSET = {}\nconst DIRECTION = {\n  NONE: \"NONE\",\n  DEFAULT: \"DEFAULT\",\n  UPSTREAM: \"UPSTREAM\",\n  DOWNSTREAM: \"DOWNSTREAM\"\n}\n\nconst STATUS = {\n  IDLE: \"IDLE\",\n  FLOWING: \"FLOWING\",\n  STOPPED: \"STOPPED\",\n  COMPLETED: \"COMPLETED\",\n  CANCELLED: \"CANCELLED\"\n}\n\nconst DEFAULTS = {\n  factory: ()=>({}),\n  behaviours:[\n    behaviours.identify,\n    behaviours.stateful,\n    behaviours.connect,\n    behaviours.create,\n    behaviours.emit,\n    behaviours.listen,\n    behaviours.cancellable,\n    behaviours.loggable\n  ],\n  direction: DIRECTION.DEFAULT\n}\nconst ERRORS = {\n  invalidGuid:     'Invalid Argument. Guid-s are immutable. Please use the .name() API to change the name of a flow object.'\n, invalidChildren: 'Invalid Argument. Please use child.parent(parent) to re-parent flow objects.'\n, invalidListener: 'Invalid Arguments. Please use .on(\"foo\", handler) to create a listener.'\n, invalidListenerType: 'Invalid Listener function. Expected a function, got: %s'\n, invalidEventName:'Invalid Arguments. Please use .emit(\"foo\", payload) to emit a flow event.'\n, invalidName:'Invalid flow Name. Expected a String value, got: %s'\n, invalidParent:'Invalid flow parent object. Expected a flow instance, got: %s'\n, invalidParents:'Invalid Argument. Please use the child.parent(parent) API to re-parent flow objects.'\n, invalidStatus:'Invalid Argument. The .status() API is read only'\n, invalidCancelArgs:'Invalid Argument. The .cancel() API requires no parameters'\n, invalidStopPropagationArgs:'Invalid Argument. The .stopPropagation() API requires no parameters'\n, invalidRoot:'Invalid Argument. The .parents.root() API is read only'\n}\n","/**\n *  utils\n */\nfunction assert(condition, error, val){\n  if (condition) {\n    throw new Error(error\n      .replace(\"%s\", val))\n  }\n  return condition\n}\n\n\nfunction isFlow(flow){\n  return flow \n    && flow.name\n    && flow.name.isFlow\n}\n\nfunction isInternal(flow){\n  return flow \n    && flow.name\n    && flow.name.isInternal\n}\n\nfunction detach(flow){\n  flow.parent() \n    && flow.parent().children.detach(flow)\n}\n\nfunction isDetached(flow){\n  return !flow.parent()\n    || !flow.parent().children.has(flow)\n}\n\nfunction flatten(array){\n  return [].concat.apply([], array);\n}\n\nfunction merge(source, target){\n  Object.keys(source).forEach(key=>{\n    target[key]= source[key]\n  })\n}\n\nfunction dispatchInternalEvent(flow, name, newData, oldData){\n  var e= create(DEFAULTS, \"flow.\"+name)\n  e.name.isInternal = true\n  e.data.value = [newData, oldData]\n  e.direction.value= DIRECTION.NONE\n  e.parent.value = flow\n  e.emit()\n  e.data.value = [flow, newData, oldData]\n  e.direction.value= DIRECTION.UPSTREAM\n  e.name.value=\"flow.children.\"+name\n  e.emit()\n  \n  e.direction.value= DIRECTION.DOWNSTREAM\n  e.name.value=\"flow.parent.\"+name\n  e.emit()\n  \n  log(flow, name, newData, oldData)\n}\n\nfunction sendToDevTools(action, payload){\n  var eventDetail = {\n    action: action, \n    payload:payload\n  };\n  var flowEvent = new document.defaultView.CustomEvent(\"FlowEvent\", {detail: eventDetail});\n  document.dispatchEvent(flowEvent);\n}\n\n\n\n\n\n","  var instance = create(DEFAULTS, \"flow\")\n\n  instance.enableDevTools = (enableDevTools=UNSET) => {\n    if (direction===UNSET) return instance.enableDevTools.value\n    instance.enableDevTools.value = enableDevTools\n    if (enableDevTools) {\n      sendToDevTools('start', {\n        name: flow.name.value, \n        id: flow.guid.value\n      })\n    }\n    return flow\n  }\n  instance.enableDevTools.value = false\n\n  instance.logger = (logger) => {\n    instance.logger.value.push(logger)\n  }\n  instance.logger.value = []\n\n  if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], ()=>instance);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = instance;\n    } else {\n        // Browser globals (\"this\" is window)\n        scope[\"this\"].flow = instance\n    }\n}({this}))"],"sourceRoot":"/source/"}